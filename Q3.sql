-- MySQL Script generated by MySQL Workbench
-- Fri Oct 23 13:46:19 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`agente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`agente` (
  `id` INT NOT NULL,
  `nome` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`carga`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`carga` (
  `numero` INT NOT NULL,
  `peso` FLOAT NOT NULL,
  `sensivel` TINYINT NULL DEFAULT NULL,
  `perecivel` TINYINT NULL DEFAULT NULL,
  `data_validade` DATE NULL DEFAULT NULL,
  `temperatura_maxima` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`numero`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`navio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`navio` (
  `nome` VARCHAR(45) NOT NULL,
  `capacidade` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`nome`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`porto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`porto` (
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nome`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`re_carga_agente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`re_carga_agente` (
  `agente_idagente` INT NOT NULL,
  `carga_numero` INT NOT NULL,
  INDEX `fk_re_carga_agente_agente1_idx` (`agente_idagente` ASC) VISIBLE,
  INDEX `fk_re_carga_agente_carga1_idx` (`carga_numero` ASC) VISIBLE,
  CONSTRAINT `fk_re_carga_agente_agente1`
    FOREIGN KEY (`agente_idagente`)
    REFERENCES `mydb`.`agente` (`id`),
  CONSTRAINT `fk_re_carga_agente_carga1`
    FOREIGN KEY (`carga_numero`)
    REFERENCES `mydb`.`carga` (`numero`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- Table `mydb`.`re_carga_porto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`re_carga_porto` (
  `data_max_desembarque` date NOT NULL,
  `porto_nome` VARCHAR(45) NOT NULL,
  `carga_numero` INT NOT NULL,
  INDEX `fk_re_carga_porto_porto1_idx` (`porto_nome` ASC) VISIBLE,
  INDEX `fk_re_carga_porto_carga1_idx` (`carga_numero` ASC) VISIBLE,
  CONSTRAINT `fk_re_carga_porto_carga1`
    FOREIGN KEY (`carga_numero`)
    REFERENCES `mydb`.`carga` (`numero`),
  CONSTRAINT `fk_re_carga_porto_porto1`
    FOREIGN KEY (`porto_nome`)
    REFERENCES `mydb`.`porto` (`nome`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`re_navio_carga`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`re_navio_carga` (
  `carga_numero` INT NOT NULL,
  `navio_nome` VARCHAR(45) NOT NULL,
  INDEX `fk_re_navio_carga_carga1_idx` (`carga_numero` ASC) VISIBLE,
  INDEX `fk_re_navio_carga_navio1_idx` (`navio_nome` ASC) VISIBLE,
  CONSTRAINT `fk_re_navio_carga_carga1`
    FOREIGN KEY (`carga_numero`)
    REFERENCES `mydb`.`carga` (`numero`),
  CONSTRAINT `fk_re_navio_carga_navio1`
    FOREIGN KEY (`navio_nome`)
    REFERENCES `mydb`.`navio` (`nome`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`re_navio_porto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`re_navio_porto` (
  `navio_nome` VARCHAR(45) NOT NULL,
  `porto_nome` VARCHAR(45) NOT NULL,
  INDEX `fk_re_navio_porto_navio1_idx` (`navio_nome` ASC) VISIBLE,
  INDEX `fk_re_navio_porto_porto1_idx` (`porto_nome` ASC) VISIBLE,
  CONSTRAINT `fk_re_navio_porto_navio1`
    FOREIGN KEY (`navio_nome`)
    REFERENCES `mydb`.`navio` (`nome`),
  CONSTRAINT `fk_re_navio_porto_porto1`
    FOREIGN KEY (`porto_nome`)
    REFERENCES `mydb`.`porto` (`nome`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`re_porto_agente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`re_porto_agente` (
  `porto_nome` VARCHAR(45) NOT NULL,
  `agente_idagente` INT NOT NULL,
  INDEX `fk_re_porto_agente_porto1_idx` (`porto_nome` ASC) VISIBLE,
  INDEX `fk_re_porto_agente_agente1_idx` (`agente_idagente` ASC) VISIBLE,
  CONSTRAINT `fk_re_porto_agente_agente1`
    FOREIGN KEY (`agente_idagente`)
    REFERENCES `mydb`.`agente` (`id`),
  CONSTRAINT `fk_re_porto_agente_porto1`
    FOREIGN KEY (`porto_nome`)
    REFERENCES `mydb`.`porto` (`nome`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- Tabela populada com 1 agente, 3 portos, 3 cargas e 3 navios --
insert into agente (id, nome) values (1, "cleber"); 
insert into agente (id, nome) values (2, "cleiton"); 
insert into agente (id, nome) values (3, "claudio");

insert into carga (numero, peso, sensivel, temperatura_maxima) values (1, 130, 1, 70); 
insert into carga (numero, peso, perecivel, data_validade) values (123, 150, 1, "2020/09/20"); 
insert into carga (numero, peso) values (2, 190); 
insert into carga (numero, peso, perecivel, data_validade) values (3, 150, 1, "2030/09/10"); 


insert into navio (nome, capacidade) values ("cargueiro", 100);
insert into navio (nome, capacidade) values ("cargueiro 2", 100);
insert into navio (nome, capacidade) values ("bruxa do mar", 200);

insert into porto (nome) value ("porto camboriu"); 
insert into porto (nome) value ("porto itajai"); 
insert into porto (nome) value ("porto floripa"); 

-- relações ente navios e cargas estabelecidos --

insert into re_navio_carga (carga_numero, navio_nome) values (1, "cargueiro");
insert into re_navio_carga (carga_numero, navio_nome) values (123, "bruxa do mar");
insert into re_navio_carga (carga_numero, navio_nome) values (2, "cargueiro 2");
insert into re_navio_carga (carga_numero, navio_nome) values (3, "cargueiro 2");

-- relações entre agente e cargas estabelecidas --

insert into re_carga_agente (carga_numero, agente_idagente) values (1,1);
insert into re_carga_agente (carga_numero, agente_idagente) values (123,1);
insert into re_carga_agente (carga_numero, agente_idagente) values (2,2);
insert into re_carga_agente (carga_numero, agente_idagente) values (3,2);

-- relações entre portos e cargas estabelecidas --

insert into re_carga_porto (data_max_desembarque, porto_nome, carga_numero) values ("2020/11/10", "porto camboriu", 1);
insert into re_carga_porto (data_max_desembarque, porto_nome, carga_numero) values ("2020/09/10", "porto itajai", 123);
insert into re_carga_porto (data_max_desembarque, porto_nome, carga_numero) values ("2021/09/10", "porto floripa", 2);
insert into re_carga_porto (data_max_desembarque, porto_nome, carga_numero) values ("2019/09/10", "porto floripa", 3);

-- relações entre portos e navios --
insert into re_navio_porto (navio_nome, porto_nome) values ("cargueiro" , "porto camboriu");
insert into re_navio_porto (navio_nome, porto_nome) values ("bruxa do mar", "porto itajai");
insert into re_navio_porto (navio_nome, porto_nome) values ("cargueiro 2", "porto floripa");

-- questões --
-- selecionar carga com base nos portos e navios --
select carga_numero, porto_nome, nc.navio_nome from re_navio_carga nc, re_navio_porto np where nc.navio_nome = "bruxa do mar" and np.navio_nome = "bruxa do mar";

-- selecionar carga com base em ser sensivel ou perecivel
select numero, peso, data_validade from carga c where c.perecivel = 1;
select numero, peso, temperatura_maxima from carga c where c.sensivel = 1;

-- selecionar carga perecivel com data de validade ultrapassada (alterar para datetime?) --
select numero, data_validade from carga c where c.data_validade < current_date();

-- selecionar cargas relacionadas com agentes com data de desembarque menor que a atual --
select ca.carga_numero, cp.data_max_desembarque, ca.agente_idagente, cp.porto_nome from re_carga_agente ca, re_carga_porto cp where cp.data_max_desembarque < current_date() and ca.carga_numero = cp.carga_numero;
